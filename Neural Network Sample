import numpy as np
import tensorflow as tf
from tensorflow import keras

# Generate sample data
np.random.seed(0)
X = np.linspace(-1, 1, 100)
y = 2 * X + np.random.randn(*X.shape) * 0.3

# Split the data into training and testing sets
X_train, X_test = X[:80], X[80:]
y_train, y_test = y[:80], y[80:]

# Build the neural network model
model = keras.Sequential([
    keras.layers.Dense(10, input_dim=1, activation='relu'),
    keras.layers.Dense(1)
])

# Compile the model
model.compile(loss='mean_squared_error', optimizer='adam')

# Train the model
model.fit(X_train, y_train, epochs=50, batch_size=10, verbose=0)

# Predict on the test data
y_pred = model.predict(X_test)

# Print the predictions
print("Predictions:", y_pred.flatten())

# Evaluate the model
loss = model.evaluate(X_test, y_test)
print("Test loss:", loss)
